AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  banktransfer-lambda-service
  Sample SAM Template for bank-transfer-lambda-service

Parameters:
  Environment:
    Type: String
    Default: dev
  SecretName:
    Type: String
    Default: my-lambda/SM-project
  QueueName:
    Type: String
    Default: transfer-requery-queue

Globals:
  Function:
    Timeout: 10
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
    Environment:
      Variables:
        SECRET_NAME: !Ref SecretName

Resources:
  TransferRequeryQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref QueueName
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Service
        Value: banktransfer

  TransferRequeryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: functions/transferRequery.handler
      Runtime: nodejs18.x
      Role: !GetAtt TransferRequeryFunctionRole.Arn
      Architectures:
        - x86_64
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref TransferRequeryQueue
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TransferRequeryQueue.Arn
            BatchSize: 10
      Tags:
        Environment: !Ref Environment
        Service: banktransfer
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - functions/transferRequery.ts
        External:
          - "@aws-sdk/client-secrets-manager"

  TransferRequeryFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaBasicExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "sqs:SendMessage"
                  - "sqs:GetQueueAttributes"
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                Resource: !GetAtt TransferRequeryQueue.Arn
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretName}*
              - Effect: Allow
                Action:
                  - "xray:PutTraceSegments"
                  - "xray:PutTelemetryRecords"
                Resource: "*"

Outputs:
  TransferRequeryFunction:
    Description: TransferRequery Service
    Value: !GetAtt TransferRequeryFunction.Arn

  TransferRequeryFunctionRole:
    Description: IAM Role for TransferRequery Lambda function
    Value: !GetAtt TransferRequeryFunctionRole.Arn

  TransferRequeryQueueUrl:
    Description: SQS Queue URL for TransferRequery
    Value: !Ref TransferRequeryQueue
